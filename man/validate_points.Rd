% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_functions.R
\name{validate_points}
\alias{validate_points}
\title{Validate Point Coordinates}
\usage{
validate_points(points, lng_col = NULL, lat_col = NULL)
}
\arguments{
\item{points}{Matrix, data.frame, or sf object with facility coordinates}

\item{lng_col}{Character name of longitude column (default: "lng").
If NULL, auto-detects from common longitude column names.}

\item{lat_col}{Character name of latitude column (default: "lat").
If NULL, auto-detects from common latitude column names.}
}
\value{
Matrix with standardized lng/lat columns
}
\description{
Validates and standardizes facility coordinate input for accessibility analysis.
Handles various input formats and automatically detects coordinate columns.
}
\details{
The function handles multiple input formats:

\strong{For sf objects}: Extracts coordinates using st_coordinates()

\strong{For data.frames}:
\itemize{
\item If lng_col and lat_col are specified, uses those columns
\item If lng_col/lat_col are NULL, auto-detects coordinate columns from common names
\item If data.frame has exactly 2 columns, assumes first = longitude, second = latitude
}

\strong{For matrices}: Assumes first column = longitude, second column = latitude

\strong{Auto-detection searches for these column name patterns:}
\itemize{
\item Longitude: "lng", "lon", "long", "longitude", "x", "X"
\item Latitude: "lat", "latitude", "y", "Y"
}
}
\examples{
# From matrix (assumes lng, lat order)
coords_matrix <- matrix(c(36.8, -1.3, 37.0, -1.5), ncol = 2, byrow = TRUE)
points <- validate_points(coords_matrix)

# From data.frame with standard names
coords_df <- data.frame(lng = c(36.8, 37.0), lat = c(-1.3, -1.5))
points <- validate_points(coords_df)

# From data.frame with custom names
coords_df <- data.frame(longitude = c(36.8, 37.0), latitude = c(-1.3, -1.5))
points <- validate_points(coords_df, lng_col = "longitude", lat_col = "latitude")

# Auto-detection
coords_df <- data.frame(lon = c(36.8, 37.0), lat = c(-1.3, -1.5))
points <- validate_points(coords_df, lng_col = NULL, lat_col = NULL)

# Two-column data.frame (assumes lng, lat order)
coords_df <- data.frame(c(36.8, 37.0), c(-1.3, -1.5))
points <- validate_points(coords_df)

}
